import joblib
import pandas as pd

# ============================================================
# üß† Chargement du mod√®le ML2 (R√©gression Logistique)
# ============================================================
model = joblib.load("app/model_ML2.pkl")

# ============================================================
# üîπ Exemple de donn√©es d'entr√©e (sans customer_id)
# ============================================================
test_input = {
    "credit_lines_outstanding": [0],
    "loan_amt_outstanding": [5221.545193],
    "total_debt_outstanding": [3915.471226],
    "income": [78039.38546],
    "years_employed": [5],
    "fico_score": [605]
}

X_test = pd.DataFrame(test_input)

# ============================================================
# ‚úÖ Test de pr√©diction
# ============================================================
def test_predict_default():
    """V√©rifie que la pr√©diction du mod√®le est correcte et √©gale √† 0 (pas de d√©faut)."""
    prediction = model.predict(X_test)[0]
    print(f"üîç Pr√©diction du mod√®le ML2 : {prediction}")

    # V√©rifie que la pr√©diction est bien binaire (0 ou 1)
    assert prediction in [0, 1], "‚ùå La pr√©diction n'est pas binaire (0 ou 1)."

    # V√©rifie que le mod√®le pr√©dit bien 0 (aucun d√©faut de paiement attendu)
    assert prediction == 0, f"‚ùå Le mod√®le a pr√©dit {prediction}, alors qu'on attendait 0."

    print("‚úÖ Test r√©ussi : le mod√®le pr√©dit correctement 0 (aucun d√©faut de paiement).")


# ============================================================
# üöÄ Ex√©cution directe du test
# ============================================================
if __name__ == "__main__":
    test_predict_default()
